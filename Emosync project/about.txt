
Emotion-Based Music Recommendation App ðŸŽµ

This React-based project dynamically recommends songs based on the user's detected emotions. 
The app leverages a categorized playlist of songs for different emotional states, offering a personalized music experience.

### Features
- ðŸŽ­ Emotion-Specific Playlists: Curated playlists for emotions like *happy*, *sad*, and *neutral*.
- ðŸŽ¶ Built-in Music Player: Stream songs directly within the app using an integrated audio player.(working on dynamic music app using music apis)
- ðŸ§  Scalable Song Metadata: Each song entry includes details like title, artist, and playback URL, ensuring extensibility for future enhancements.
- ðŸŒŸ Interactive UI: Modern and user-friendly interface built with React.

### How It Works
1. Detect the user's emotional state (or select it manually).
2. Fetch a corresponding playlist from a predefined database.
3. Display the list of songs with titles, artists, and playback options.
4. Play songs directly in the app using the embedded audio player.

### Tech Stack
- Frontend: React.js
- Backend: Use Flask or FastAPI to host your Python model as a REST API. (Optional services for dynamic playlists)
- Language: JavaScript (ES6+)
- Media Handling: HTML5 `<audio>` player

### Future Enhancements
- ðŸŽ¥ Emotion Detection Integration: Add a TensorFlow.js-based webcam emotion detection system.
- ðŸŽ§ Streaming Integration: Sync with Spotify or other streaming APIs for seamless music access.
- ðŸ“± Mobile App: Create a responsive or standalone mobile application.

/emotion-detection-app
â”‚
â”œâ”€â”€ /backend
â”‚   â”œâ”€â”€ app.py               # Flask API
â”‚   â”œâ”€â”€ emotion_detection_model.h5 # Trained model
â”‚   â”œâ”€â”€ utils.py             # Helper functions for preprocessing
â”‚
â”œâ”€â”€ /frontend
â”‚   â”œâ”€â”€ /public
â”‚   â”œâ”€â”€ /src
â”‚   â”‚   â”œâ”€â”€ components
â”‚   â”‚   â”‚   â”œâ”€â”€ GetEmotion.jsx
â”‚   â”‚   â”‚   â”œâ”€â”€ MusicPlayer.jsx
â”‚   â”‚   â””â”€â”€ App.jsx
â”‚   â”œâ”€â”€ package.json         # Frontend dependencies
â”‚   â”œâ”€â”€ ... (React configs)
â”‚


Install Dependencies:
`pip install flask flask-cors tensorflow pillow numpy`
`npm install axios react-router-dom`

How to Use:
1.Start the backend server with python app.py. (The backend will run at http://127.0.0.1:5000)
2.Run the React app with npm start in the frontend folder.
3.Use the webcam to capture an image, send it to the Python API, and receive the detected emotion.
4.The appropriate playlist should be displayed based on the detected emotion.
